@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: Login.razor
    **
    **  Description:
    **      Login page
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@


@using Notes2021Blazor.Shared
@inject IAuthService AuthService
@inject ILocalStorageService _localStorage
@inject IModalService Modal

<div class="dialogs modal-body medium-input">
    <h1>Login</h1>

    @if (ShowErrors)
    {
        <div class="alert alert-danger" role="alert">
            <p>@Error</p>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Please enter your details</h5>
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="email">Email address</label>
                    <InputText Id="email" Class="form-control short-input" @bind-Value="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" Class="form-control short-input" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>
                @*<div class="form-group">
            <label for="rememberme">Remember me</label>
            <InputCheckbox Id="rememberme" Class="form-control checkbox" @bind-Value="loginModel.RememberMe" />
        </div>*@
                <button type="submit" class="btn btn-primary btn-sm">Submit</button>&nbsp;&nbsp;<button type="button"@onclick="Cancel" class="btn btn-info btn-sm">Cancel</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] ModalParameters Parameters { get; set; }

    public string Autologin { get; set; } = string.Empty;

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    protected override async Task OnInitializedAsync()
    {
        Autologin = Parameters.Get<string>("Autologin");

        if (Autologin.Length < 5)
            return;

        loginModel.Email = Autologin;
        loginModel.Password = "Notes123";

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
            Modal.Close();
    }

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            Modal.Close();
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

    private void Cancel()
    {
        Modal.Cancel();
    }

}
