@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: Index.razor
    **
    **  Description:
    **      Root of the app
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Notes2021Blazor.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.EJ2.Blazor.Spinner

@inherits HomeComp

<div>
    <h2 class="center">Welcome to Notes 2021 Blazor Edition <img src="favicon.ico" width="32" /></h2>
    <div id="container"></div>
    <EjsSpinner @ref="SpinnerObj" Target="#container" CssClass="e-spin-overlay" Width="70px">
    </EjsSpinner>
    @if (model == null)
    {
        <p class="center"><em>Loading...</em></p>
    }
    else
    {
        <h5 class="center">
            <span id="homepagetime">
                @myTime
            </span>
        </h5>

        @if (!string.IsNullOrEmpty(model.Message))
        {
            <div>@((MarkupString)@model.Message)</div>
        }
    }

    @if (fileList == null || nameList == null)
    {
        <div class="keep-center">
            <div class="loading-section">
                <h2>Loading....</h2>
                <div class="loader mt-5">
                    <div class="loader-dot dot1"></div>
                    <div class="loader-dot dot2"></div>
                    <div class="loader-dot dot3"></div>
                </div>
            </div>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Guest">
            <Authorized>
                <h5 class="keep-center">You are a guest and my not write to any files.</h5>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView>
            <Authorized Context="Outer">
                <div class="row">
                    <div class="col-md-4"></div>
                    <div class="col-md-4 roundedindex keep-center">
                        <EditForm Model="@dummyFile">
                            <p>
                                <label>
                                    <strong>Enter a NoteFile Name and press Enter:</strong>
                                    <InputText class="form-control short-input"
                                               ValueChanged="@( (string val) => TextHasChanged(val) )"
                                               Value="@dummyFile.NoteFileName"
                                               ValueExpression="@( () => dummyFile.NoteFileName )" />
                                </label>
                            </p>
                            Or select a file<br />
                            <InputSelect id="select1" class="btn btn-file dropdown-toggle form-control short-input"
                                         ValueChanged="@( (string val) => TextHasChanged(val) )"
                                         Value="@dummyFile.NoteFileName"
                                         ValueExpression="@( () => dummyFile.NoteFileName )">
                                <option value="none" selected="selected">-- Select from list --</option>
                                @foreach (var item in fileList)
                                {
                                    <option value=@item.NoteFileName>@item.NoteFileName</option>
                                }
                            </InputSelect>
                            <br />Or select a title<br />
                            <InputSelect id="select2" class="btn btn-title dropdown-toggle form-control short-input"
                                         ValueChanged="@( (string val) => TextHasChanged(val) )"
                                         Value="@dummyFile.NoteFileName"
                                         ValueExpression="@( () => dummyFile.NoteFileName )">
                                <option value="none" selected="selected">-- Select from list --</option>
                                @foreach (var item in nameList)
                                {
                                    <option value=@item.NoteFileName>@item.NoteFileTitle</option>
                                }
                            </InputSelect>
                        </EditForm>
                        <LinkToAllFiles OnMessage="OnMessage"></LinkToAllFiles>
                        @*<h4><a href="notes/notesfiles" class=" keep-center">See All Files</a></h4>*@
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                    </div>
                    <div class="col-md-4">
                        <h4>Important Files</h4>
                        <ul>
                            @foreach (localFile x in impfileList)
                            {
                                <li>
                                    <FileButton NoteFile="@x" OnMessage="MessageHandler"></FileButton>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-md-4">
                        <h4>History Files</h4>
                        <ul>
                            @foreach (localFile x in histfileList)
                            {
                                <li>
                                    <FileButton NoteFile="@x" OnMessage="MessageHandler"></FileButton>
                                </li>
                            }
                        </ul>
                    </div>

                </div>

                @*<div class="keep-center"><button type="button" @onclick="Logout">Logout</button></div>*@
            </Authorized>
            <NotAuthorized>
                <div class="keep-center">
                    <h2>Not Logged In!</h2>
                    <h4>Please register if you have not already.  Then login.  Thanks.</h4>

                    @if (Globals.GuestId != "*none*")
                    {
                        <h5>Or you may <button type="button" class="linkblue" @onclick="Autologin">login as Guest</button> to browse.</h5>
                    }

                    @if (!string.IsNullOrEmpty(model.Message))
                    {
                        <div>@((MarkupString)@model.Message)</div>
                    }

                </div>
            </NotAuthorized>
        </AuthorizeView>
        <AuthorizeView Roles="Guest">
            <Authorized>
                <h5 class="keep-center">You are a guest and my not write to any files.</h5>
            </Authorized>
        </AuthorizeView>
    }
</div>
