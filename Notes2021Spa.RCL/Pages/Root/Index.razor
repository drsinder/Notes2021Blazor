@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: Index.razor
    **
    **  Description:
    **      Main page in SPA
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Syncfusion.EJ2.Blazor.Navigations
@using Notes2021Blazor.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager navManager

@inherits IndexComp

    <div>
        <div class="top-row">
            <div class="keep-center">
                <EjsMenu Items="@menuItemsTop" @ref="@topMenu">
                    <MenuEvents ItemSelected="OnSelectTop"></MenuEvents>
                </EjsMenu>
                &nbsp;&nbsp;
            </div>

            <AuthorizeView>
                <Authorized>
                    <button type="button" class="btn btn-info btn-sm" @onclick="Logout">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <button type="button" class="btn btn-info btn-sm" @onclick="Register">Register</button>&nbsp;&nbsp;
                    <button type="button" class="btn btn-info btn-sm" @onclick="Login">Login</button>
                </NotAuthorized>
            </AuthorizeView>
            &nbsp;&nbsp;<button type="button" class="btn btn-info btn-sm" @onclick="Home">Notes 2021 Home</button>&nbsp;&nbsp;
        </div>

        <div>
            @if (CurrentLoc == Locations.Home)
            {
                <Home OnMessage="MessageHandler"></Home>
            }
            else if (CurrentLoc == Locations.About)
            {
                <About OnMessage="MessageHandler"></About>
            }
            else if (CurrentLoc == Locations.MainHelp)
            {
                <Help OnMessage="MessageHandler"></Help>
            }
            @*else if (CurrentLoc == Locations.Login)
        {
            <Login OnMessage="MessageHandler" Autologin="@Autologin"></Login>
        }*@
            else if (CurrentLoc == Locations.Logout)
            {
                <Logout OnMessage="MessageHandler"></Logout>
            }
            else if (CurrentLoc == Locations.Register)
            {
                <Register OnMessage="MessageHandler"></Register>
            }
            @*else @if (CurrentLoc == Locations.Schema)
        {
        <Schema OnMessage="MessageHandler"></Schema>
        }*@
            else @if (CurrentLoc == Locations.Preferences)
      {
        <Preferences OnMessage="MessageHandler"></Preferences>
    }
    else @if (CurrentLoc == Locations.RecentEdit)
          {
            <Tracker OnMessage="MessageHandler"></Tracker>
        }
        else @if (CurrentLoc == Locations.Subscriptions)
      {
        <Subscribe OnMessage="MessageHandler"></Subscribe>
    }
    else @if (CurrentLoc == Locations.License)
      {
        <License></License>
    }
    else @if (CurrentLoc == Locations.AdminFiles)
      {
        <NotesFilesAdmin></NotesFilesAdmin>
    }
    else @if (CurrentLoc == Locations.Roles)
      {
        <UserList></UserList>
    }
    else @if (CurrentLoc == Locations.Linked)
      {
        <LinkIndex OnMessage="MessageHandler"></LinkIndex>
    }
    else @if (CurrentLoc == Locations.CreateLinked)
      {
        <CreateLinked OnMessage="MessageHandler"></CreateLinked>
    }
    else @if (CurrentLoc == Locations.EditLinked)
      {
        <EditLinked OnMessage="MessageHandler" id="@IntArg.ToString()"></EditLinked>
    }
    else @if (CurrentLoc == Locations.FileList)
      {
        <NotesFiles OnMessage="MessageHandler"></NotesFiles>
    }
    else @if (CurrentLoc == Locations.Temp)
      {
          CurrentLoc = PreviousLoc;
          UpdateMenu();
          navManager.NavigateTo(navManager.Uri, true);
      }

      else if (CurrentLoc == Locations.FileUserIndex)
      {
        @if (Model == null)
        {
            <div class="loading-section">
                <h2>@message</h2>
                <div class="loader mt-5">
                    <div class="loader-dot dot1"></div>
                    <div class="loader-dot dot2"></div>
                    <div class="loader-dot dot3"></div>
                </div>
            </div>
        }
        else
        {
            <AuthorizeView Roles="User,Guest">
                <Authorized>
                    <div>
                        @if (newnoteFlag)
                        {
                            <NoteEditorPanel Model="@Model" BaseNoteId=0 OnClick="ClickHandler" />
                        }
                        else if (mode == -1)
                        {

                        }
                        else if (printfile)
                        {
                            <DisplayPanel Model="Model" currentHeader="currentHeader" Id="Id" SeqBases="seqBases"
                                          trackers="trackers" seqIndx="seqIndex" OnClick="ClickHandler"
                                          isSearch="isSearch" SearchResults="results" PrintFile="true" ToolTips="false" />
                        }
                        else if (mode == 0)  // index mode
                        {
                            if (!string.IsNullOrEmpty(message))
                            {
                                <div class="loading-section">
                                    <h2>@message ...</h2>
                                    <div class="loader mt-5">
                                        <div class="loader-dot dot1"></div>
                                        <div class="loader-dot dot2"></div>
                                        <div class="loader-dot dot3"></div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <button @onkeypress="KeyPressed">
                                    <div><br /></div>
                                    <IndexHeader Model="@Model" BasenoteCount="@basenoteCount" arcId="@archiveID" />
                                    @if (ShowIndex)
                                    {
                                        <NoteIndex Model="@Model" FirstOrdinal="@currentHeader.NoteOrdinal" OnClick="ClickHandler" />
                                    }
                                    @*<br /><br />*@
                                    <div class="arrow1">
                                        <div>
                                            <EditForm Model="@myInput" Context="EditBox">
                                                <div class="form-group">
                                                    <InputText id="arrow1" autofocus="@myInput.isAutoFocus" style="width: 7em"
                                                               ValueChanged="@( (string val) => TextHasChanged(val) )"
                                                               Value="@myInput.typedValue"
                                                               ValueExpression="@( () => myInput.typedValue )" />
                                                </div>
                                            </EditForm>
                                            <input type="submit" value="Navigate" class="btn btn-sm" /> b# | b#.r#
                                        </div>
                                    </div>
                                </button>
                            }
                        }
                        else // note display mode
                        {
                            if (Model.myAccess.ReadAccess)
                            {
                                <DisplayPanel Model="Model" currentHeader="currentHeader" Id="Id" SeqBases="seqBases"
                                              trackers="trackers" seqIndx="seqIndex" OnClick="ClickHandler"
                                              isSearch="isSearch" SearchResults="results" ToolTips="true" />
                            }
                            else
                            {
                                <h3>You may not read notes in this file.</h3>
                            }
                        }
                    </div>
                </Authorized>
                <NotAuthorized>
                    <p>Access Denied!</p>
                </NotAuthorized>
            </AuthorizeView>
        }


    }


    else
    {
        <div>Routing Error!</div>
    }
        </div>
    </div>

<style>
    .e-menu-wrapper ul {
        background-color: #555;
        color: #FFF;
    }

        .e-menu-wrapper ul .e-menu-item .e-caret {
            color: #FFF;
        }

        .e-menu-wrapper ul .e-menu-item.e-focused {
            color: #CCC;
            outline: 0 solid #f8f9fa;
            outline-offset: 0;
            background-color: none;
        }

            .e-menu-wrapper ul .e-menu-item.e-focused .e-caret {
                color: #CCC;
            }

        .e-menu-wrapper ul .e-menu-item.e-selected {
            color: #CCC;
            outline: 0 solid #f2f4f6;
            outline-offset: 0;
            background-color: none;
        }

    .e-menu-wrapper .e-ul {
        background-color: #555;
        color: #FFF;
    }

    .menu-control {
        text-align: center;
        color: #FFF;
        background-color: #555;
    }

    .layout #container {
        color: #FFF;
        background-color: #555;
    }
</style>
