@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: HomePapgeMessages.razor
    **
    **  Description:
    **      Edit home page messages
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@page "/admin/homepagemessage"
@using Notes2021Blazor.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView Roles="Admin">
    <Authorized>
        <div>
            <h3>Home Page Message</h3>
            @if (MyMessage == null)
            {
                <p class="center"><em>Loading...</em></p>
            }
            else
            {
                <div>
                    Enter a new Message:
                    <br /><br />
                    <input type="text" @bind-value="@MyMessage.Message" class="long-input" />
                    <br /><br />
                    <button type="button" @onclick="Submit">Submit</button>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        Access denied.
    </NotAuthorized>
</AuthorizeView>
@code {

    private HomePageMessage MyMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MyMessage = await Http.GetJsonAsync<HomePageMessage>("api/homepagemessage");
    }

    private async Task Submit()
    {
        if (MyMessage.Id == 0 && MyMessage.Message.Length > 0)
        {
            // new message

            await Http.PostJsonAsync("api/homepagemessage", MyMessage);
        }
        else if (MyMessage.Id > 0)
        {
            if (MyMessage.Message.Length == 0)
            {
                // delete

                await Http.DeleteAsync("api/homepagemessage");
            }
            else
            {
                // update message

                await Http.PutJsonAsync("api/homepagemessage", MyMessage);
            }
        }

        NavigationManager.NavigateTo(Globals.RootUri);
    }

}
