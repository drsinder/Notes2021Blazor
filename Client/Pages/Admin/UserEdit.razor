@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: UserEdit.razor
    **
    **  Description:
    **      User Roles editor
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Notes2021Blazor.Shared
@using Microsoft.AspNetCore.Identity

@inject HttpClient Http
@inject IModalService Modal

<div class="dialogs">
    <h3>User Role Editor</h3>
    <div>
        @if (Model == null)
        {
            <p class="center"><em>Loading...</em></p>
        }
        else
        {
            @Model.UserData.DisplayName<br />
            foreach (CheckedUser item in Model.RolesList)
            {
                <EjsCheckBox @bind-Checked="@item.isMember" Label="@item.theRole.Name"></EjsCheckBox><span>&nbsp;&nbsp;&nbsp;</span>
            }
            <br /><br />
            <button type="button" @onclick="@Submit">Submit</button> <button type="button" @onclick="@Done">Close</button>
        }
    </div>
</div>

@code {

    [CascadingParameter] public ModalParameters Parameters { get; set; }

    protected EditUserViewModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        string userId = Parameters.Get<string>("UserId");
        Model = await Http.GetJsonAsync<EditUserViewModel>("api/useredit/" + userId);
    }

    private async Task Submit()
    {
        await Http.PutJsonAsync("api/useredit/", Model);

        Modal.Cancel();
    }


    private void Done()
    {
        Modal.Cancel();
    }

}
