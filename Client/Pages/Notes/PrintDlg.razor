@using System.Timers
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IModalService Modal

<div class="dialogs">
    <h2>Click the print icon in the bar below.</h2>
    <div class="control-section">
        <div class="control-wrapper">
            <div class="control-section">
                <EjsRichTextEditor @ref="@RteObj" ShowCharCount="false" EditorMode="EditorMode.HTML" Readonly="@readonlyPrint" MaxLength="200000">
                    <ChildContent>
                        <RichTextEditorToolbarSettings Items="@Tools"></RichTextEditorToolbarSettings>
                    </ChildContent>
                </EjsRichTextEditor>
            </div>
        </div>
    </div>
    <button @onclick="ClosePrint" class="btn btn-info btn-sm">Close Printer</button>
</div>

@code{
    [CascadingParameter] ModalParameters Parameters { get; set; }

    private string PrintStuff { get; set; }

    private bool readonlyPrint { get; set; }

    public object[] Tools = new object[]{
       "Print"
    };

    EjsRichTextEditor RteObj;

    private Timer timer2 { get; set; }

    protected override void OnInitialized()
    {
        PrintStuff = Parameters.Get<string>("PrintStuff");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            timer2 = new Timer(500);
            timer2.Elapsed += TimerTick2;
            timer2.Enabled = true;
        }
    }

    protected void TimerTick2(Object source, ElapsedEventArgs e)
    {
        timer2.Enabled = false;
        readonlyPrint = false;
        this.RteObj.ExecuteCommand(CommandName.InsertHTML, PrintStuff);
        readonlyPrint = true;
        StateHasChanged();
    }

    private void ClosePrint()
    {
        Modal.Cancel();
    }
}
