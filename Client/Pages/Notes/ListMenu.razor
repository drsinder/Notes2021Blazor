@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: ListMenu.razor
    **
    **  Description:
    **      Menu bar for Main (mode 0)
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Notes2021Blazor.Shared

<p class="notesmenu">
    <button type="button" class="link" @onclick="ListNoteFiles">List Note Files</button>
    @if (@Model.myAccess.Write)
    {
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="NewNote">New Base Note</button>
    }
    @if (@Model.myAccess.ReadAccess)
    {
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="eXport">eXport</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="Html">Html</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="html">html</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="mail">mail</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="SearchFromIndex">Search</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="MarkMine">Mark Mine</button>
    }
    @if (@Model.isMarked)
    {
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="OutputMarked">Output Marked</button>
    }
    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span><button type="button" class="link" @onclick="ListHelp"><strong>Z for HELP.</strong></button>
    @if (@Model.myAccess.EditAccess || Model.myAccess.ViewAccess)
    {
        <span>&nbsp;&nbsp;&nbsp;&nbsp;<button type="button" class="link" @onclick="AccessControls">Access Controls</button></span>
    }
    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
</p>

@code {
    [Parameter] public NoteDisplayIndexModel Model { get; set; }
    [Parameter] public EventCallback<string> OnClick { get; set; }

    private void Test()
    {
        OnClick.InvokeAsync("Test Me!");
    }

    private void NewNote()
    {
        OnClick.InvokeAsync("NewBaseNote");

    }

    private void ListNoteFiles()
    {
        OnClick.InvokeAsync("ListNoteFiles");

    }

    private void ListHelp()
    {
        OnClick.InvokeAsync("ListHelp");

    }

    private void AccessControls()
    {
        OnClick.InvokeAsync("AccessControls");
    }

    private void OutputMarked()
    {
        OnClick.InvokeAsync("OutputMarked");
    }

    private void eXport()
    {
        OnClick.InvokeAsync("eXport");
    }

    private void Html()
    {
        OnClick.InvokeAsync("HtmlFromIndex");
    }

    private void html()
    {
        OnClick.InvokeAsync("htmlFromIndex");
    }

    private void mail()
    {
        OnClick.InvokeAsync("mailFromIndex");
    }

    private void SearchFromIndex()
    {
        OnClick.InvokeAsync("SearchFromIndex");
    }

    private void MarkMine()
    {
        OnClick.InvokeAsync("MarkMine");
    }

}
