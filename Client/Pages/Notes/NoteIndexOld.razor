@*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2020, Dale Sinder
    **
    **  Name: NoteIndexOld.razor
    **
    **  Description:
    **      Scrolling version of the notes index grid
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http: //www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Notes2021Blazor.Shared

<table class="table">
    <tr>
        <th>#</th>
        <th>Subject</th>
        <th>Writer</th>
        <th>Date/Time</th>
        <th>Responses</th>
        <th></th>
    </tr>
    @if (@Model.myAccess.ReadAccess)
    {
        foreach (var item in Model.Notes)
        {
            string when = Model.tZone.LocalBlazor(item.CreateDate).ToString();  // + " " + Model.tZone.Abbreviation;
            string idx = "Base" + (item.NoteOrdinal + 1);
            <tr class="noteindex">
                <td><span id="@idx"><IndexButton text="@item.NoteOrdinal.ToString()" noteId="@item.Id" OnClick="Display" /></span></td>
                <td><IndexButton text="@item.NoteSubject" noteId="@item.Id" OnClick="Display" /></td>
                <td><IndexButton text="@item.AuthorName" noteId="@item.Id" OnClick="Display" /></td>
                <td><IndexButton text="@when" noteId="@item.Id" OnClick="Display" /></td>
                @if (item.ResponseCount > 0)
                {
                    <td><IndexButton text="@item.ResponseCount.ToString()" noteId="@item.Id" OnClick="Display" /></td>
                }
                else
                {
                    <td></td>
                }
                <td><IndexButton text="View" noteId="@item.Id" OnClick="Display" /></td>
            </tr>
        }
    }
    else if (@Model.myAccess.Write)
    {
        <tr>
            <td><h3>You may not read this file, but you may write to it.</h3></td>
        </tr>
    }
    else
    {
        <tr>
            <td><h3>You may not read this file.</h3></td>
        </tr>
    }
</table>

@code{
    [Parameter] public NoteDisplayIndexModel Model { get; set; }
    [Parameter] public EventCallback<string> OnClick { get; set; }

    protected void Display(string newMessage)
    {
        OnClick.InvokeAsync(newMessage);
    }
}